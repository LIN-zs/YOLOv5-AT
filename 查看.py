import os
import pandas as pd
import numpy as np
import matplotlib.pyplot  as plt
from matplotlib.ticker import MultipleLocator
from matplotlib import rcParams

config = {
    "font.family":'Times New Roman',  # 设置字体类型
    "axes.unicode_minus": False #解决负号无法显示的问题
}

rcParams.update(config)


MAP50=[]
P = []
R = []
MAP5095=[]
F1=[]
loss=[]
for k in ['v5at','atv5无数据增强','V5ATMOSACI','AT MP0.8','V5ATCCP']:
    txt=pd.read_csv(r'C:\Users\16609\Desktop\V5AT'+'\\'+k+r'\out.txt',header=None,delimiter=')').values.T[0:100]
    # con=txt.values
    # totallist = []
    # for d in range(0,100):
    #     a=con[d]
    #     for i in a:
    #         iij=i.split(' ')
    #         l1=[]
    #         for j in iij:
    #             if j=='':
    #                 pass
    #             else:
    #                 l1.append(j)
    #         totallist.append(l1)
    # print(len(totallist))
    # for i in totallist:
    #     map=float(i[-5])
    #     MAP50.append(map)
    for i in txt:
        i=i[0]
        i=i.strip('(')
        i=i.split(',')
        P.append(float(i[0]))
        R.append(float(i[1]))
        F1.append((2*float(i[0])*float(i[1]))/(float(i[0])+float(i[1])))
        MAP50.append(float(i[2]))
        loss.append(float(i[4])+float(i[5])+float(i[6]))
        MAP5095.append(float(i[3]))
    print(MAP50)


# v3=[0.0019743629719696128, 0.003188535475222948, 0.0024040166917483957, 0.036275317003738934, 0.18366381118170205, 0.10021284232038756, 0.06112302092536123, 0.05444603748577748, 0.18064542526840896, 0.3877822478898547, 0.19440453235812954, 0.4418171762750375, 0.4278315124567079, 0.5716495353511557, 0.5417509658522504, 0.5922850270782303, 0.6583356963624327, 0.688189664297707, 0.7000654606506785, 0.6551292600984757, 0.7034595443575749, 0.7157264696089389, 0.7266639970480615, 0.7174685406149037, 0.7015674054709755, 0.6864587240296927, 0.7616484194858432, 0.6893552299407858, 0.7397887720344745, 0.7052071104873945, 0.7742476796340257, 0.7445455200390605, 0.7604043453418344, 0.7802901042774295, 0.7841701934907925, 0.7607303775087193, 0.7778693286814429, 0.7744380354058951, 0.805304500977931, 0.7756584320006283, 0.7941173566943205, 0.7892053453025711, 0.7744969176674976, 0.7829910814903356, 0.808675041190431, 0.7836702162174913, 0.7946158914499706, 0.7982496383344154, 0.8003001026869259, 0.7853138414112698, 0.8088434866993008, 0.784856223880045, 0.813838722821859, 0.8256834326240656, 0.8096496610711335, 0.7977192042520536, 0.8190649607349832, 0.8179268290863997, 0.7894126334172654, 0.805954814317491, 0.8065624350778822, 0.827266093199864, 0.8116033334377268, 0.8021420518100234, 0.8195715991625561, 0.797186238983455, 0.8122630298875929, 0.8300317534358845, 0.8183747309618109, 0.8244108126878359, 0.8062658545391275, 0.8242178788697687, 0.820588851111292, 0.8128504771744801, 0.8317516956182047, 0.8303100934899943, 0.8142955548446876, 0.8219773760403775, 0.8205931851758216, 0.8169534317151135, 0.8266434298506645, 0.8181352804831951, 0.8358757124541356, 0.8271255278480633, 0.8256708755136788, 0.8139140544283006, 0.8198115428361061, 0.8203267113554105, 0.8239196926758336, 0.8244147844639005, 0.8397325468633438, 0.8108504859365687, 0.83093000830112, 0.8093539621792054, 0.8244152022627803, 0.8199011541878785, 0.8069172464454394, 0.8303825727946066, 0.8143383478926506, 0.8252811346284473]
# v5=[0.0004210453128281171, 0.0006932935816902098, 0.001224435956839362, 0.0018016743347774359, 0.0018820481837912141, 0.0015994907630716949, 0.0030087366740186067, 0.00271400214704467, 0.009564626468390111, 0.030293563513448543, 0.021277223527907157, 0.04740573491214845, 0.14659144746812391, 0.2181026074349835, 0.3211792036784997, 0.3193690055887712, 0.5047295582862023, 0.2876782043967769, 0.4300001828532747, 0.4231707865375799, 0.5220010517625927, 0.5460901702842544, 0.6405951637425282, 0.6602989235414357, 0.6504041275050225, 0.6958636798519607, 0.6790567178975504, 0.5638896339823937, 0.7023548260141154, 0.641467756740117, 0.671218285226455, 0.6945067299040489, 0.721886604439963, 0.7076554631108305, 0.7517655258947947, 0.7207035333344423, 0.7352147751723622, 0.7605421781216968, 0.7337766228954353, 0.7495359938954832, 0.756791066712837, 0.7435048916168967, 0.7627225248295095, 0.7644180510714185, 0.7459036294896617, 0.7249647881710038, 0.7759381707566827, 0.7890819927857183, 0.7315671120857155, 0.779780042852181, 0.7737140687961943, 0.7874386019170857, 0.7568633074704043, 0.7716187380715179, 0.7858910814487592, 0.7797699652763639, 0.77990681746182, 0.7873127004158804, 0.7845517580408432, 0.8015924992579619, 0.7926432748114121, 0.796742802846538, 0.7900195406204239, 0.7867057425016628, 0.7712059968855421, 0.7932257658752472, 0.7803805628609234, 0.6573494972587686, 0.8149304228677738, 0.8094010270360195, 0.8043376403723729, 0.7179434448693478, 0.8073556803772532, 0.798445814440027, 0.8057433475465723, 0.7923105087562522, 0.7599935844668171, 0.7615687308152413, 0.8073315007513107, 0.8112483101037302, 0.7910895600384933, 0.8118843997634811, 0.8023626541812436, 0.813254405835945, 0.8189841982497124, 0.8171503490614783, 0.8113326128870277, 0.7983579037173021, 0.8161937534824669, 0.8146456073927522, 0.8073322471097814, 0.8130212684682817, 0.8118703983714233, 0.8158411173046857, 0.8110673874438926, 0.8176607242491353, 0.8027522366183362, 0.812006049277308, 0.8168748058753915, 0.8156097372945248]
# AT=[0.00012991267021046383, 0.00017127873639602125, 0.00032116385090232897, 0.002201733234285493, 0.00119781840850899, 0.004161874552295764, 0.019857225436641895, 0.0015972354778843224, 0.011635266412997468, 0.07848717610065167, 0.07827063353945364, 0.1845932799711889, 0.25103835480292747, 0.27959574380037866, 0.40643517710739835, 0.39277308396474503, 0.4983745225759928, 0.5654317828289408, 0.5083028270820898, 0.6422463916769233, 0.25376972396745723, 0.619203004096987, 0.6444135205086738, 0.5943224883623883, 0.5936656902244574, 0.694836164064156, 0.7245223379108067, 0.7053789280722012, 0.7402441378804556, 0.734436434801682, 0.7571162044743958, 0.7256867929514559, 0.7575377672050829, 0.7685311588601658, 0.7512851952955497, 0.7495297334856273, 0.7762553081746814, 0.7577658009097765, 0.7998861128707491, 0.793971451715444, 0.7671246047836905, 0.776765435707796, 0.7933061054909304, 0.8038254978686648, 0.775485943949733, 0.8038384387605088, 0.7942120748587622, 0.8070243360120064, 0.8055990979083798, 0.8113616466668312, 0.8030345174779114, 0.812344465803447, 0.7772541932235882, 0.8268229978411554, 0.8151493837713083, 0.819787465550576, 0.8197676509369006, 0.8138173135990632, 0.8172848481478076, 0.8222150592903342, 0.8102529392697704, 0.8168937603932136, 0.819620297468934, 0.8070728085946972, 0.8216288853837527, 0.829156384531703, 0.8264613517630497, 0.8224139497831121, 0.82974103417792, 0.8224652527877798, 0.8293000220678853, 0.8186414607328529, 0.8297449175184284, 0.8214392598119519, 0.8312951652578882, 0.8429077841757731, 0.8312520708342563, 0.8311701450854013, 0.8325048832623074, 0.8289101896634903, 0.8384345112295138, 0.8401777850247368, 0.8340401376322755, 0.835110072826398, 0.8365090353055785, 0.840043048834034, 0.826761728128077, 0.8171263957013204, 0.8399837808267916, 0.8293155680570135, 0.8377328602968144, 0.8373663996861271, 0.8359648773919868, 0.8289206559246306, 0.8335445033929497, 0.8344105845346365, 0.8348212033513958, 0.8279205746175682, 0.8315046224017851, 0.8348961117133037]
x=range(100)
plt.figure()
plt.figure(figsize=(9, 6))
# plt.plot(R[0:100],P[0:100],label='v5-AT-Augment')
# plt.plot(R[100:200],P[100:200],label='v5-AT-No Augment')
# plt.plot(R[200:300],P[200:300],label='v5-AT-Mosaic')
# plt.plot(R[300:400],P[300:400],label='v5-AT-Mixup')
# plt.plot(R[300:400],P[400:500],label='v5-AT-SAM-Copypaste')
plt.plot(x,MAP50[0:100],label='v5-AT-Augment',color='r')
plt.plot(x,MAP50[100:200],label='v5-AT-No Augment',color='g')
plt.plot(x,MAP50[200:300],label='v5-AT-Mosaic',color='b')
plt.plot(x,MAP50[300:400],label='v5-AT-Mixup',color='y')
plt.plot(x,MAP50[400:500],label='v5-AT-SAM-Copypaste',color='m')
# ax1 = plt.axes()
# xmajor = MultipleLocator(0.2)
# ax1.yaxis.set_major_locator(xmajor)
plt.yticks([0,0.2,0.4,0.6,0.8])
plt.xlabel('Epoch')
plt.ylabel('MAP@50')




plt.legend()
plt.show()